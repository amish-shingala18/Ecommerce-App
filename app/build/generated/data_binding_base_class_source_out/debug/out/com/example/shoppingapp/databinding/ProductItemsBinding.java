// Generated by view binder compiler. Do not edit!
package com.example.shoppingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoppingapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductItemsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clItems;

  @NonNull
  public final ImageView imgProduct;

  @NonNull
  public final TextView txtOriginalPrice;

  @NonNull
  public final TextView txtProductName;

  @NonNull
  public final TextView txtProductPrice;

  @NonNull
  public final TextView txtRupees;

  private ProductItemsBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout clItems,
      @NonNull ImageView imgProduct, @NonNull TextView txtOriginalPrice,
      @NonNull TextView txtProductName, @NonNull TextView txtProductPrice,
      @NonNull TextView txtRupees) {
    this.rootView = rootView;
    this.clItems = clItems;
    this.imgProduct = imgProduct;
    this.txtOriginalPrice = txtOriginalPrice;
    this.txtProductName = txtProductName;
    this.txtProductPrice = txtProductPrice;
    this.txtRupees = txtRupees;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout clItems = (ConstraintLayout) rootView;

      id = R.id.imgProduct;
      ImageView imgProduct = ViewBindings.findChildViewById(rootView, id);
      if (imgProduct == null) {
        break missingId;
      }

      id = R.id.txtOriginalPrice;
      TextView txtOriginalPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtOriginalPrice == null) {
        break missingId;
      }

      id = R.id.txtProductName;
      TextView txtProductName = ViewBindings.findChildViewById(rootView, id);
      if (txtProductName == null) {
        break missingId;
      }

      id = R.id.txtProductPrice;
      TextView txtProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtProductPrice == null) {
        break missingId;
      }

      id = R.id.txtRupees;
      TextView txtRupees = ViewBindings.findChildViewById(rootView, id);
      if (txtRupees == null) {
        break missingId;
      }

      return new ProductItemsBinding((ConstraintLayout) rootView, clItems, imgProduct,
          txtOriginalPrice, txtProductName, txtProductPrice, txtRupees);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
